spring:
  main:
    web-application-type: reactive
  messages:
    basename: validation
  data:
    mongodb:
      database: rides-db
      host: localhost
      port: 27017
      authentication-database: admin
  application:
    name: RIDE-SERVICE
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8181/realms/taxi-realm
          jwk-set-uri: http://localhost:8181/realms/taxi-realm/protocol/openid-connect/certs
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json:
          trusted.packages: "*"
          type.mapping: ChangeRideStatusRequest:com.nikonenko.rideservice.dto.ChangeRideStatusRequest, ReviewRequest:com.nikonenko.rideservice.dto.ReviewRequest
      group-id: ride-group
      auto-offset-reset: latest
      status-topic-name: ride-status-topic
      passenger-review-name: passenger-review-topic
      driver-review-name: driver-review-topic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: RatingToDriverRequest:com.nikonenko.rideservice.dto.RatingToDriverRequest, RatingToPassengerRequest:com.nikonenko.rideservice.dto.RatingToPassengerRequest
      driver-rating-topic:
        name: driver-rating-topic
      passenger-rating-topic:
        name: passenger-rating-topic
mongock:
  migration-scan-package:
    - com.nikonenko.rideservice.migrations

eureka:
  client:
    service-url:
      defaultZone: http://eureka@localhost:8761/eureka/
server:
  port: 8084

feign:
  client:
    config:
      payment:
        name: PAYMENT-SERVICE
        path: /api/v1/payments

resilience4j:
  circuitbreaker:
    instances:
      paymentBreaker:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 20
        waitDurationInOpenState: 50s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    retry:
      instances:
        paymentRetry:
          maxAttempts: 3
          waitDuration: 10s
          enableExponentialBackoff: true
          exponentialBackoffMultiplier: 2

management:
  endpoints:
    web:
      exposure:
        include: [ "prometheus", "health"]
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      rate: 1.0
      probability: 1.0

jwt:
  auth:
    converter:
      resource-id: taxi-realm
      principal-attribute: sub